[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /login.faces
authc.successUrl = /home.jsp
user.loginUrl = /login2.jsp
ssl.enabled = false

#[main]
#authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
#authc.loginUrl = /login.xhtml
#user.loginUrl = /login2.jsp
#ssl.enabled = false



#jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#jdbcRealm.authenticationQuery = SELECT password from user where username = ?
#jdbcRealm.userRolesQuery = select role from userroles where userID = (select id FROM user WHERE username = ?)
#jdbcRealm.permissionsQuery  = select permission from roles_permissions where role_name = ?

#ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#ds.serverName = localhost
#ds.user = shiro_user
#ds.password = shiro
#ds.databaseName = shiro
#jdbcRealm.dataSource= $ds

#passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
#credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#credentialsMatcher.hashAlgorithmName = SHA-256
#credentialsMatcher.storedCredentialsHexEncoded = true
#credentialsMatcher.hashIterations = 5000


[urls]
/test.html = authc, roles[admin]
/login.faces = anon
/error.xhtml = anon
/sample/** = authc
/adminHome.faces = authc, roles[admin]
/*.xhtml = authc
/*.jsp = authc
/logout = logout


[users]
root = secret, admin
guest = guest, guest
#presidentskroob = 12345, president
#darkhelmet = ludicrousspeed, darklord, schwartz
#lonestarr = vespa, goodguy, schwartz

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
[roles]
admin = admin:user:enable,admin:user:disable,admin:user:resetPassword
#schwartz = lightsaber:*
#goodguy = winnebago:drive:eagle5